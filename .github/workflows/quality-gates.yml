name: 🚦 Quality Gates

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  quality-check:
    name: 🛡️ Quality Gates
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🔍 TypeScript check
      run: npm run typecheck
      
    - name: 🧹 Lint check
      run: npm run lint
      
    - name: 🧪 Test coverage gate
      run: |
        npm run test:coverage
        # Fail if coverage is below 80%
        COVERAGE=$(grep -o '"pct":[0-9.]*' coverage/coverage-summary.json | head -1 | cut -d':' -f2)
        echo "Coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "❌ Coverage too low: $COVERAGE% (minimum 80%)"
          exit 1
        fi
        echo "✅ Coverage meets requirements: $COVERAGE%"
      
    - name: 🏗️ Build check
      run: npm run build
      
    - name: 📊 Bundle size check
      run: |
        npm run build
        SIZE=$(du -sk dist | cut -f1)
        echo "Bundle size: ${SIZE}KB"
        # Fail if bundle is over 2MB (2048KB)
        if [ $SIZE -gt 2048 ]; then
          echo "❌ Bundle too large: ${SIZE}KB (maximum 2048KB)"
          exit 1
        fi
        echo "✅ Bundle size acceptable: ${SIZE}KB"
        
    - name: 🔒 Security check
      run: |
        npm audit --audit-level high
        echo "✅ No high-severity vulnerabilities found"
        
    - name: ✅ Quality gates passed
      run: |
        echo "# 🎉 All Quality Gates Passed!" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ TypeScript compilation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ ESLint rules" >> $GITHUB_STEP_SUMMARY  
        echo "- ✅ Test coverage ≥80%" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Build successful" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Bundle size ≤2MB" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Security audit" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚀 Ready to merge!" >> $GITHUB_STEP_SUMMARY